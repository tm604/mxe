This file is part of MXE.
See index.html for further information.

From ed4d73908be1a077bec94ba669e5e46d6d422818 Mon Sep 17 00:00:00 2001
From: Kai Koehne <kai.koehne@digia.com>
Date: Thu, 28 Nov 2013 16:48:37 +0100
Subject: [PATCH 1/3] Add plugins.qmltypes file

Task-number: QTBUG-35207
Change-Id: If6843d71c2d6e0a9afec3dca3683ac0fcd1188b6
Reviewed-by: J-P Nurmi <jpnurmi@digia.com>
Reviewed-by: Lars Knoll <lars.knoll@digia.com>

diff --git a/src/imports/winextras/plugins.qmltypes b/src/imports/winextras/plugins.qmltypes
new file mode 100644
index 0000000..f5963ce
--- /dev/null
+++ b/src/imports/winextras/plugins.qmltypes
@@ -0,0 +1,207 @@
+import QtQuick.tooling 1.1
+
+// This file describes the plugin-supplied types contained in the library.
+// It is used for QML tooling purposes only.
+//
+// This file was auto-generated by:
+// 'qmlplugindump -nonrelocatable QtWinExtras 1.0'
+
+Module {
+    Component {
+        name: "QQuickDwmFeatures"
+        defaultProperty: "data"
+        prototype: "QQuickItem"
+        exports: ["QtWinExtras/DwmFeatures 1.0"]
+        exportMetaObjectRevisions: [0]
+        Property { name: "compositionEnabled"; type: "bool" }
+        Property { name: "colorizationColor"; type: "QColor"; isReadonly: true }
+        Property { name: "realColorizationColor"; type: "QColor"; isReadonly: true }
+        Property { name: "colorizationOpaqueBlend"; type: "bool"; isReadonly: true }
+        Property { name: "topGlassMargin"; type: "int" }
+        Property { name: "rightGlassMargin"; type: "int" }
+        Property { name: "bottomGlassMargin"; type: "int" }
+        Property { name: "leftGlassMargin"; type: "int" }
+        Property { name: "blurBehindEnabled"; type: "bool" }
+        Property { name: "excludedFromPeek"; type: "bool" }
+        Property { name: "peekDisallowed"; type: "bool" }
+        Property { name: "flip3DPolicy"; type: "QQuickWin::WindowFlip3DPolicy" }
+    }
+    Component {
+        name: "QQuickJumpList"
+        defaultProperty: "data"
+        prototype: "QObject"
+        exports: ["QtWinExtras/JumpList 1.0"]
+        exportMetaObjectRevisions: [0]
+        Property { name: "recent"; type: "QQuickJumpListCategory"; isReadonly: true; isPointer: true }
+        Property { name: "frequent"; type: "QQuickJumpListCategory"; isReadonly: true; isPointer: true }
+        Property { name: "tasks"; type: "QQuickJumpListCategory"; isPointer: true }
+        Property { name: "categories"; type: "QQuickJumpListCategory"; isList: true; isReadonly: true }
+        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
+    }
+    Component {
+        name: "QQuickJumpListCategory"
+        defaultProperty: "data"
+        prototype: "QObject"
+        exports: ["QtWinExtras/JumpListCategory 1.0"]
+        exportMetaObjectRevisions: [0]
+        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
+        Property { name: "items"; type: "QQuickJumpListItem"; isList: true; isReadonly: true }
+        Property { name: "title"; type: "string" }
+        Property { name: "visible"; type: "bool" }
+        Signal { name: "visibilityChanged" }
+    }
+    Component {
+        name: "QQuickJumpListItem"
+        prototype: "QObject"
+        exports: ["QtWinExtras/JumpListItem 1.0"]
+        exportMetaObjectRevisions: [0]
+        Enum {
+            name: "JumpListItemType"
+            values: {
+                "ItemTypeLink": 1,
+                "ItemTypeDestination": 2,
+                "ItemTypeSeparator": 3
+            }
+        }
+        Property { name: "__jumpListItemType"; type: "int" }
+    }
+    Component {
+        name: "QQuickTaskbarButton"
+        defaultProperty: "data"
+        prototype: "QQuickItem"
+        exports: ["QtWinExtras/TaskbarButton 1.0"]
+        exportMetaObjectRevisions: [0]
+        Property { name: "overlay"; type: "QQuickTaskbarOverlay"; isReadonly: true; isPointer: true }
+        Property { name: "progress"; type: "QWinTaskbarProgress"; isReadonly: true; isPointer: true }
+    }
+    Component {
+        name: "QQuickTaskbarOverlay"
+        prototype: "QObject"
+        exports: ["QtWinExtras/TaskbarOverlay 1.0"]
+        exportMetaObjectRevisions: [0]
+        Property { name: "iconSource"; type: "QUrl" }
+        Property { name: "accessibleDescription"; type: "string" }
+    }
+    Component {
+        name: "QQuickThumbnailToolBar"
+        defaultProperty: "data"
+        prototype: "QQuickItem"
+        exports: ["QtWinExtras/ThumbnailToolBar 1.0"]
+        exportMetaObjectRevisions: [0]
+        Property { name: "count"; type: "int"; isReadonly: true }
+        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
+        Property { name: "buttons"; type: "QQuickThumbnailToolButton"; isList: true; isReadonly: true }
+        Method { name: "clear" }
+        Method {
+            name: "addButton"
+            Parameter { name: "button"; type: "QQuickThumbnailToolButton"; isPointer: true }
+        }
+        Method {
+            name: "removeButton"
+            Parameter { name: "button"; type: "QQuickThumbnailToolButton"; isPointer: true }
+        }
+    }
+    Component {
+        name: "QQuickThumbnailToolButton"
+        prototype: "QObject"
+        exports: ["QtWinExtras/ThumbnailToolButton 1.0"]
+        exportMetaObjectRevisions: [0]
+        Property { name: "iconSource"; type: "QUrl" }
+        Property { name: "tooltip"; type: "string" }
+        Property { name: "enabled"; type: "bool" }
+        Property { name: "interactive"; type: "bool" }
+        Property { name: "visible"; type: "bool" }
+        Property { name: "dismissOnClick"; type: "bool" }
+        Property { name: "flat"; type: "bool" }
+        Signal { name: "clicked" }
+    }
+    Component {
+        name: "QQuickWin"
+        prototype: "QObject"
+        exports: ["QtWinExtras/QtWin 1.0"]
+        exportMetaObjectRevisions: [0]
+        Enum {
+            name: "HBitmapFormat"
+            values: {
+                "HBitmapNoAlpha": 0,
+                "HBitmapPremultipliedAlpha": 1,
+                "HBitmapAlpha": 2
+            }
+        }
+        Enum {
+            name: "WindowFlip3DPolicy"
+            values: {
+                "FlipDefault": 0,
+                "FlipExcludeBelow": 1,
+                "FlipExcludeAbove": 2
+            }
+        }
+    }
+    Component {
+        name: "QWinTaskbarProgress"
+        prototype: "QObject"
+        exports: ["QtWinExtras/TaskbarProgress 1.0"]
+        exportMetaObjectRevisions: [0]
+        Property { name: "value"; type: "int" }
+        Property { name: "minimum"; type: "int" }
+        Property { name: "maximum"; type: "int" }
+        Property { name: "visible"; type: "bool" }
+        Property { name: "paused"; type: "bool" }
+        Property { name: "stopped"; type: "bool"; isReadonly: true }
+        Signal {
+            name: "valueChanged"
+            Parameter { name: "value"; type: "int" }
+        }
+        Signal {
+            name: "minimumChanged"
+            Parameter { name: "minimum"; type: "int" }
+        }
+        Signal {
+            name: "maximumChanged"
+            Parameter { name: "maximum"; type: "int" }
+        }
+        Signal {
+            name: "visibilityChanged"
+            Parameter { name: "visible"; type: "bool" }
+        }
+        Signal {
+            name: "pausedChanged"
+            Parameter { name: "paused"; type: "bool" }
+        }
+        Signal {
+            name: "stoppedChanged"
+            Parameter { name: "stopped"; type: "bool" }
+        }
+        Method {
+            name: "setValue"
+            Parameter { name: "value"; type: "int" }
+        }
+        Method {
+            name: "setMinimum"
+            Parameter { name: "minimum"; type: "int" }
+        }
+        Method {
+            name: "setMaximum"
+            Parameter { name: "maximum"; type: "int" }
+        }
+        Method {
+            name: "setRange"
+            Parameter { name: "minimum"; type: "int" }
+            Parameter { name: "maximum"; type: "int" }
+        }
+        Method { name: "reset" }
+        Method { name: "show" }
+        Method { name: "hide" }
+        Method {
+            name: "setVisible"
+            Parameter { name: "visible"; type: "bool" }
+        }
+        Method { name: "pause" }
+        Method { name: "resume" }
+        Method {
+            name: "setPaused"
+            Parameter { name: "paused"; type: "bool" }
+        }
+        Method { name: "stop" }
+    }
+}
-- 
1.8.4


From c996740162dd63fa20e549e57c78ca990b2ca1c2 Mon Sep 17 00:00:00 2001
From: Friedemann Kleint <Friedemann.Kleint@digia.com>
Date: Mon, 2 Dec 2013 16:38:50 +0200
Subject: [PATCH 2/3] Add missing include for QQuickDwmFeatures plugin.

Task-number: QTBUG-35260

Change-Id: I8145fd8a98b8549de7e819740e6b7529d0785488
Reviewed-by: J-P Nurmi <jpnurmi@digia.com>

diff --git a/src/imports/winextras/qquickdwmfeatures_p.h b/src/imports/winextras/qquickdwmfeatures_p.h
index 231424a..037872f 100644
--- a/src/imports/winextras/qquickdwmfeatures_p.h
+++ b/src/imports/winextras/qquickdwmfeatures_p.h
@@ -45,6 +45,7 @@
 
 #include <QQuickItem>
 #include <QtWin>
+#include <QColor>
 
 #include "qquickwin_p.h"
 
-- 
1.8.4


From bb7d4141f14dfd22365df4991a066e9b760b088d Mon Sep 17 00:00:00 2001
From: Mark Brand <mabrand@mabrand.nl>
Date: Thu, 24 Oct 2013 22:29:51 +0200
Subject: [PATCH 3/3] Fix MinGW-w64 GCC 4.8.2 compilation


diff --git a/src/winextras/winshobjidl_p.h b/src/winextras/winshobjidl_p.h
index 91faed5..352c405 100644
--- a/src/winextras/winshobjidl_p.h
+++ b/src/winextras/winshobjidl_p.h
@@ -222,7 +222,7 @@ public:
 
 #if (defined _MSC_VER && _MSC_VER < 1600) || defined(Q_CC_MINGW)
 
-#   if !defined(__MINGW64_VERSION_MAJOR) || !defined(__MINGW64_VERSION_MINOR) || __MINGW64_VERSION_MAJOR * 100 + __MINGW64_VERSION_MINOR < 301
+#   if !defined(__MINGW64_VERSION_MAJOR) || !defined(__MINGW64_VERSION_MINOR) || __MINGW64_VERSION_MAJOR * 100 + __MINGW64_VERSION_MINOR < 300
 
 typedef struct SHARDAPPIDINFOLINK
 {
-- 
1.8.4

